{"ast":null,"code":"var _jsxFileName = \"C:\\\\feeland\\\\ty-porfolio\\\\src\\\\Component\\\\OrbitAnimation\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrbitCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    const width = canvas.width = window.innerWidth;\n    const height = canvas.height = window.innerHeight;\n    const centerX = width / 2;\n    const centerY = height * 0.2;\n    const maxRadiusX = width * 0.4;\n    const maxRadiusY = height * 0.12;\n    const imageSources = [\"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\", \"/assets/images/experience/logo.png\"];\n    const numOrbits = 3;\n    const iconsPerOrbit = 3;\n\n    // **Giảm khoảng cách giữa các vòng**\n    const spacingFactor = 1; // Càng nhỏ, vòng càng gần nhau\n    const radiusXStep = maxRadiusX / numOrbits * spacingFactor;\n    const radiusYStep = maxRadiusY / numOrbits * spacingFactor;\n    const commonSpeed = 0.005;\n    const orbitImages = imageSources.map((src, index) => {\n      const orbitIndex = Math.floor(index / iconsPerOrbit);\n      const angleOffset = index % iconsPerOrbit * (Math.PI * 2) / iconsPerOrbit;\n      return {\n        src,\n        radiusX: radiusXStep * (orbitIndex + 1),\n        radiusY: radiusYStep * (orbitIndex + 1),\n        angle: angleOffset,\n        speed: commonSpeed\n      };\n    });\n    orbitImages.forEach(item => {\n      const img = new Image();\n      img.src = item.src;\n      img.onload = () => {\n        item.img = img;\n      };\n    });\n    const animate = () => {\n      ctx.clearRect(0, 0, width, height);\n      // ctx.fillStyle = \"#0D0519\";\n      // ctx.fillRect(0, 0, width, height);\n\n      const gradient = ctx.createLinearGradient(0, centerY - maxRadiusY, 0, centerY + maxRadiusY);\n      gradient.addColorStop(0, \"#000000\");\n      gradient.addColorStop(0.48, \"#763CAC\");\n      gradient.addColorStop(1, \"#763CAC\");\n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 2;\n      for (let i = 1; i <= numOrbits; i++) {\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, radiusXStep * i, radiusYStep * i, 0, 0, Math.PI * 2);\n        ctx.stroke();\n      }\n      orbitImages.forEach(item => {\n        if (!item.img) return;\n        const x = centerX + Math.cos(item.angle) * item.radiusX;\n        const y = centerY + Math.sin(item.angle) * item.radiusY;\n        const size = 40;\n        const dx = -Math.sin(item.angle) * item.radiusX;\n        const dy = Math.cos(item.angle) * item.radiusY;\n        const rotateAngle = Math.atan2(dy, dx);\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rotateAngle);\n        ctx.drawImage(item.img, -size / 2, -size / 2, size, size);\n        ctx.restore();\n        item.angle += item.speed;\n      });\n      requestAnimationFrame(animate);\n    };\n    animate();\n    return () => cancelAnimationFrame(animate);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n};\n_s(OrbitCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = OrbitCanvas;\nexport default OrbitCanvas;\nvar _c;\n$RefreshReg$(_c, \"OrbitCanvas\");","map":{"version":3,"names":["useEffect","useRef","jsxDEV","_jsxDEV","OrbitCanvas","_s","canvasRef","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","centerX","centerY","maxRadiusX","maxRadiusY","imageSources","numOrbits","iconsPerOrbit","spacingFactor","radiusXStep","radiusYStep","commonSpeed","orbitImages","map","src","index","orbitIndex","Math","floor","angleOffset","PI","radiusX","radiusY","angle","speed","forEach","item","img","Image","onload","animate","clearRect","gradient","createLinearGradient","addColorStop","strokeStyle","lineWidth","i","beginPath","ellipse","stroke","x","cos","y","sin","size","dx","dy","rotateAngle","atan2","save","translate","rotate","drawImage","restore","requestAnimationFrame","cancelAnimationFrame","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/feeland/ty-porfolio/src/Component/OrbitAnimation/index.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\ninterface OrbitImage {\r\n  src: string;\r\n  radiusX: number;\r\n  radiusY: number;\r\n  angle: number;\r\n  speed: number;\r\n  img?: HTMLImageElement; // Lưu trữ hình ảnh sau khi load\r\n}\r\n\r\nconst OrbitCanvas = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    const width = (canvas.width = window.innerWidth);\r\n    const height = (canvas.height = window.innerHeight);\r\n\r\n    const centerX = width / 2;\r\n    const centerY = height * 0.2;\r\n    const maxRadiusX = width * 0.4;\r\n    const maxRadiusY = height * 0.12;\r\n\r\n    const imageSources = [\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n      \"/assets/images/experience/logo.png\",\r\n    ];\r\n\r\n    const numOrbits = 3;\r\n    const iconsPerOrbit = 3;\r\n\r\n    // **Giảm khoảng cách giữa các vòng**\r\n    const spacingFactor = 1; // Càng nhỏ, vòng càng gần nhau\r\n    const radiusXStep = (maxRadiusX / numOrbits) * spacingFactor;\r\n    const radiusYStep = (maxRadiusY / numOrbits) * spacingFactor;\r\n    const commonSpeed = 0.005;\r\n\r\n    const orbitImages: OrbitImage[] = imageSources.map((src, index) => {\r\n      const orbitIndex = Math.floor(index / iconsPerOrbit);\r\n      const angleOffset =\r\n        ((index % iconsPerOrbit) * (Math.PI * 2)) / iconsPerOrbit;\r\n      return {\r\n        src,\r\n        radiusX: radiusXStep * (orbitIndex + 1),\r\n        radiusY: radiusYStep * (orbitIndex + 1),\r\n        angle: angleOffset,\r\n        speed: commonSpeed,\r\n      };\r\n    });\r\n\r\n    orbitImages.forEach((item) => {\r\n      const img = new Image();\r\n      img.src = item.src;\r\n      img.onload = () => {\r\n        item.img = img;\r\n      };\r\n    });\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, width, height);\r\n      // ctx.fillStyle = \"#0D0519\";\r\n      // ctx.fillRect(0, 0, width, height);\r\n\r\n      const gradient = ctx.createLinearGradient(\r\n        0,\r\n        centerY - maxRadiusY,\r\n        0,\r\n        centerY + maxRadiusY\r\n      );\r\n      gradient.addColorStop(0, \"#000000\");\r\n      gradient.addColorStop(0.48, \"#763CAC\");\r\n      gradient.addColorStop(1, \"#763CAC\");\r\n\r\n      ctx.strokeStyle = gradient;\r\n      ctx.lineWidth = 2;\r\n\r\n      for (let i = 1; i <= numOrbits; i++) {\r\n        ctx.beginPath();\r\n        ctx.ellipse(\r\n          centerX,\r\n          centerY,\r\n          radiusXStep * i,\r\n          radiusYStep * i,\r\n          0,\r\n          0,\r\n          Math.PI * 2\r\n        );\r\n        ctx.stroke();\r\n      }\r\n\r\n      orbitImages.forEach((item) => {\r\n        if (!item.img) return;\r\n\r\n        const x = centerX + Math.cos(item.angle) * item.radiusX;\r\n        const y = centerY + Math.sin(item.angle) * item.radiusY;\r\n        const size = 40;\r\n\r\n        const dx = -Math.sin(item.angle) * item.radiusX;\r\n        const dy = Math.cos(item.angle) * item.radiusY;\r\n        const rotateAngle = Math.atan2(dy, dx);\r\n\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.rotate(rotateAngle);\r\n        ctx.drawImage(item.img, -size / 2, -size / 2, size, size);\r\n        ctx.restore();\r\n\r\n        item.angle += item.speed;\r\n      });\r\n\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => cancelAnimationFrame(animate as any);\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className=\"w-full\" />;\r\n};\r\n\r\nexport default OrbitCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}